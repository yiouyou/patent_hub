[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Patent Workflow",
  "enabled": 1,
  "modified": "2025-07-27 07:54:18.285118",
  "module": "Patent Hub",
  "name": "Auto Enable Buttons in Patent Workflow",
  "script": "frappe.ui.form.on('Patent Workflow', {\r\n  refresh(frm) {\r\n    update_step_buttons(frm);\r\n\r\n    // 绑定一次 grid 事件（避免重复绑定）\r\n    bind_table_events_once(frm, 'table_upload_info2tech');\r\n    bind_table_events_once(frm, 'table_upload_review2revise');\r\n  },\r\n\r\n  // 普通字段变更监听（保持不变）\r\n  patent_title: update_step_buttons,\r\n  scene: update_step_buttons,\r\n  tech: update_step_buttons,\r\n  application: update_step_buttons\r\n});\r\n\r\n/**\r\n * 主函数：检查条件，更新按钮颜色和可用状态\r\n */\r\nfunction update_step_buttons(frm) {\r\n  const rules = [\r\n    { button: 'call_title2scene', field: 'patent_title' },\r\n    { button: 'call_info2tech', field: 'table_upload_info2tech', is_table: true },\r\n    { button: 'call_scene2tech', field: 'scene' },\r\n    { button: 'call_tech2application', field: 'tech' },\r\n    { button: 'call_align2tex2docx', field: 'application' },\r\n    { button: 'call_review2revise', field: 'table_upload_review2revise', is_table: true }\r\n  ];\r\n\r\n  rules.forEach(({ button, field, is_table }) => {\r\n    const hasValue = is_table\r\n      ? Array.isArray(frm.doc[field]) && frm.doc[field].length > 0\r\n      : !!frm.doc[field]?.trim?.();\r\n\r\n    const btn = frm.get_field(button);\r\n    if (btn && btn.$wrapper) {\r\n      const $btn = btn.$wrapper.find('button');\r\n      $btn.toggleClass('btn-primary', hasValue);\r\n      $btn.toggleClass('btn-default', !hasValue);\r\n      $btn.prop('disabled', !hasValue);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * 保证只绑定一次 Grid 表格事件\r\n */\r\nfunction bind_table_events_once(frm, table_fieldname) {\r\n  if (frm[`_${table_fieldname}_bound`]) return;\r\n\r\n  const grid = frm.fields_dict[table_fieldname]?.grid;\r\n  if (grid && typeof grid.on === 'function') {\r\n    ['row_removed', 'row_added', 'data_changed'].forEach(event => {\r\n      grid.on(event, () => {\r\n        update_step_buttons(frm);\r\n      });\r\n    });\r\n    frm[`_${table_fieldname}_bound`] = true;\r\n  }\r\n}\r\n",
  "view": "Form"
 }
]